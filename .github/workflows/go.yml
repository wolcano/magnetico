name: Go

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GOCACHE: ${{ github.workspace }}/.gocache
    #  CCACHE_DIR: ${{ github.workspace }}/.ccache
    #  CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
    #  CCACHE_NOHASHDIR: true
    #  CCACHE_MAXSIZE: 1G
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    #- name: Set up ccache
    #  uses: hendrikmuhs/ccache-action@v1.2
    #  with:
    #    key: ${{ runner.os }}-${{ github.sha }}
    #    restore-keys: ${{ runner.os }}

    - name: Cache Gradle Files
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.gocache
        key: ${{ runner.os }}-gocache-file

    - name: Install go-bindata
      run: |
        # go get -u -v github.com/kevinburke/go-bindata/...
        go install github.com/kevinburke/go-bindata/go-bindata@v3.24.0

    - name: Mod tidy
      run: |
        cd cmd/magneticod ; go mod tidy; cd -
         cd cmd/magneticow ; go mod tidy; cd - 

    - name: Build magneticod
      run: |
        # make magneticod
        # go install --tags fts5 "-ldflags=-s -w -X main.compiledOn=`date -u +%Y-%m-%dT%H:%M:%SZ`" ./cmd/magneticod
        go build --tags fts5 "-ldflags=-s -w -X main.compiledOn=`date -u +%Y-%m-%dT%H:%M:%SZ`" ./cmd/magneticod

    #- name: Build magneticod.exe
    #  run: |
    #    GOOS=windows GOARCH=amd64 go build --tags fts5 "-ldflags=-s -w -X main.compiledOn=`date -u +%Y-%m-%dT%H:%M:%SZ`" ./cmd/magneticod

    - name: Build magneticow bindata
      run: |
        go-bindata -pkg "main" -o="cmd/magneticow/bindata.go" -prefix="cmd/magneticow/data/" cmd/magneticow/data/...
        sed -i '1s;^;//lint:file-ignore * Ignore file altogether\n;' cmd/magneticow/bindata.go

    - name: Build magneticow
      run: |
        # make magneticow
        go build --tags fts5 "-ldflags=-s -w -X main.compiledOn=`date -u +%Y-%m-%dT%H:%M:%SZ`" ./cmd/magneticow

    - name: Build magneticow.exe
      run: |
        GOOS=windows GOARCH=amd64 go build --tags fts5 "-ldflags=-s -w -X main.compiledOn=`date -u +%Y-%m-%dT%H:%M:%SZ`" ./cmd/magneticow
        # ls -laR

    #- name: Test
    #  run: |
    #    make test

    #- name: Lint
    #  run: |
    #    make staticcheck

    #- name: Check Formatting
    #  run: |
    #    make check-formatting

    - name: Package (*nix)
      run: |
        tar -cv README.md magneticod magneticow | gzip --best > '${{ runner.os }}.tar.gz'
        7z a ${{ runner.os }}.win64.zip README.md magneticod.exe magneticow.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }} # ${{ matrix.target }}
        path: |
          ${{ runner.os }}.tar.gz
          ${{ runner.os }}.*.zip

    #- name: Create release
    #  if: startsWith(github.ref, 'refs/tags/v')
    #  uses: softprops/action-gh-release@v1
    #  with:
    #    draft: true
    #    files: |
    #      *.zip
    #      *.tar.gz
